{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "9f3ce44f_afb5ab6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002651
      },
      "writtenOn": "2025-02-12T17:53:10Z",
      "side": 1,
      "message": "New patchset updated with updated commit text.",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32a9408a_5b801e6e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002651
      },
      "writtenOn": "2025-02-24T13:19:45Z",
      "side": 1,
      "message": "@d11002806@gapps.ntust.edu.tw and @rong.zhang@windriver.com PTAL",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9b269803_9ec3ee0a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002306
      },
      "writtenOn": "2025-03-05T07:46:56Z",
      "side": 1,
      "message": "Is \"wrongDeploymentManagerID\" here supposed to be a var? If not, then its lgtm. Ill vote after clarification from @rong.zhang@windriver.com",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46ba504c_cc3d05e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002651
      },
      "writtenOn": "2025-03-05T12:16:02Z",
      "side": 1,
      "message": "No, that was meant to be a value that generated a 404, but since it is not formatted as a UUID as is defined in the specs it results in a 400... so updating it to a UUID formatted, but still unknown, value.",
      "parentUuid": "9b269803_9ec3ee0a",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2531ed52_a45a5fe0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1001571
      },
      "writtenOn": "2025-03-07T06:57:57Z",
      "side": 1,
      "message": "Using a fake UUID is a good idea. It\u0027s better than fake string.\n*Question here is*: Does the robot framework have officially way to generate the UUID?\n\nDoes the following way work?\n1. Use the python built-in library\n```\n*** Test Cases ***\nGenerate Random UUID\n    ${uuid}    Evaluate    str(__import__(\u0027uuid\u0027).uuid4())\n    Log    Generated UUID: ${uuid}\n```\n\n2. Use 3rd-party library to generate it  \n\n```\n*** Settings ***\nLibrary    String\n\n*** Test Cases ***\nGenerate Random UUID Using String Library\n    ${uuid}    Generate Random String    36    [LOWER]0123456789-\n    Log    Random UUID-like String: ${uuid}\n```\n\n3. If there is no other way to generate, I will vote for the hardcode UUID here.",
      "parentUuid": "46ba504c_cc3d05e0",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38ffc549_c0c67b8e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1002651
      },
      "writtenOn": "2025-03-07T13:10:46Z",
      "side": 1,
      "message": "Thanks for providing example code.  I\u0027ve tested option 1.  Please PTAL @rong.zhang@windriver.com",
      "parentUuid": "2531ed52_a45a5fe0",
      "revId": "e26f42c5597347da822b34ca443d3f94087e9325",
      "serverId": "84e4e190-e623-4c37-9eda-58b1937c1b53"
    }
  ]
}