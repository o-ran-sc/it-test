#   Copyright (c) 2019 AT&T Intellectual Property.
#   Copyright (c) 2019 Nokia.
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.

#
# configuration for this chart is split between this file and the "recipe"
# used by the ric-common chart.  For the most part, platform configuration
# is defined by that recipe, and robot configuration is here.
#

images:
 ric:
  robot:
   job:
    init:
     name: alpine
     # tag: latest
    run:
     repository: snapshot.docker.ranco-dev-tools.eastus.cloudapp.azure.com:10001
     name: test/nanobot
     tag: latest
     # note: the helm chart does not create repository credential secrets.
     # If your repository requires authentication, create a docker-registry 
     # secret with
     #
     #   kubectl create secret docker-registry --namespace <robot-job-namespace> ...
     #
     # and fill in secret-name below.  Only one secret should be created per
     # registry. The chart will take care of producing a unique  list of
     # imagePullSecrets.
     repositoryCred: azure-secret
ric:
 cluster:
  # The kubernetes cluster name.  To find this, do:
  # $ grep cluster: ${KUBECONFIG}
  name: kubernetes
  # the DNS domain for k8s services, typically "cluster.local"
  domain: cluster.local
 platform:
  # RIC installation details.  The values
  # for these can typically be found in
  # the ricplt/ric_env.sh file from the ric
  # platform source tree
  releaseName: r0
  components:
   appmgr:
    user: test
    password: test
   rtmgr:
    user: test
    password: test
   e2mgr:
    user: test
    password: test
   e2term:
   a1mediator:
 xapp:
  anr:
   servicename: anr
 robot:
  release: r1
  #
  # host filesystem path where robot
  # output will be stored
  log: /opt/ric/robot/log
  #
  # Active testsuites can be chosen by
  # tag, testuite names, or both.  leaving
  # either unspecified will cause all to run.
  testsuites:
  # - ricdeployment
  # - healthcheck
  tags:
   enabled:
   # - etetests
   # - k8stests
   disabled:
   # - intrusive
   # - artificialdata
   - UpdateWebPage
   - e2setup_dash
   - x2setup_dash
  # the name of a test xapp; the appmgr testsuite
  # will attempt to deploy and undeploy this app;
  # This should be an xapp which is "onboarded" to
  # the appmgr but not deployed at the time the test
  # is initiated.
  xapp: xapp-std
  gNodeB:
   # the details of a test gNodeB, for [E/X]2 tests.
   # This can be either a real gnodeb or a simulator,
   # but in either case should exist prior to test
   # initiation.
   name: AAAA456789
   address: 10.0.0.3
   port: 36421
  #
  job:
   # set this to a true value to cause
   # the job to fail (and, typically, be resubmitted)
   # when tests fail
   failOnTestFail: false
   serviceAccount:
    # by default, the job will create
    # a temporary serviceaccount and
    # role to allow it to access the
    # xapp and platform namespaces.
    # to use an existing serviceaccount,
    # set this to false...
    create: true
    # ... and specify the serviceaccount here:
    # name: nanobot
